// Generated by BUCKLESCRIPT VERSION 4.0.7, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Js_math = require("bs-platform/lib/js/js_math.js");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");

var component = ReasonReact.reducerComponent("App");

function make(_children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              var cn = function (ix, activeIx) {
                var match = ix === activeIx;
                if (match) {
                  return "item active";
                } else {
                  return "item";
                }
              };
              var score = String(self[/* state */1][/* score */2]);
              var match = self[/* state */1][/* status */0];
              return React.createElement("div", {
                          className: "container"
                        }, React.createElement("div", {
                              className: "header"
                            }, React.createElement("h1", undefined, "" + (String(score) + " fantas catched"))), React.createElement("div", {
                              className: "board"
                            }, Belt_Array.map(Belt_Array.range(0, 5), (function (ix) {
                                    return React.createElement("div", {
                                                key: String(ix),
                                                className: cn(ix, self[/* state */1][/* activeIx */1]),
                                                onClick: (function (param) {
                                                    return Curry._1(self[/* send */3], /* Whack */[ix]);
                                                  })
                                              });
                                  }))), React.createElement("div", {
                              className: "footer"
                            }, match ? null : React.createElement("button", {
                                    onClick: (function (param) {
                                        return Curry._1(self[/* send */3], /* Start */0);
                                      })
                                  }, "Start!")));
            }),
          /* initialState */(function (param) {
              return /* record */[
                      /* status : Waiting */0,
                      /* activeIx */-1,
                      /* score */0
                    ];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, state) {
              if (typeof action === "number") {
                if (action !== 0) {
                  var activeIx = Js_math.random_int(0, 6);
                  return /* Update */Block.__(0, [/* record */[
                              /* status */state[/* status */0],
                              /* activeIx */activeIx,
                              /* score */state[/* score */2]
                            ]]);
                } else {
                  return /* UpdateWithSideEffects */Block.__(2, [
                            /* record */[
                              /* status : Playing */1,
                              /* activeIx */state[/* activeIx */1],
                              /* score */state[/* score */2]
                            ],
                            (function (self) {
                                var intervalId = setInterval((function (param) {
                                        return Curry._1(self[/* send */3], /* RequestNewAppearance */1);
                                      }), 1000);
                                return Curry._1(self[/* onUnmount */4], (function (param) {
                                              clearInterval(intervalId);
                                              return /* () */0;
                                            }));
                              })
                          ]);
                }
              } else {
                var match = action[0] === state[/* activeIx */1];
                if (match) {
                  return /* Update */Block.__(0, [/* record */[
                              /* status */state[/* status */0],
                              /* activeIx */-1,
                              /* score */state[/* score */2] + 1 | 0
                            ]]);
                } else {
                  return /* NoUpdate */0;
                }
              }
            }),
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.component = component;
exports.make = make;
/* component Not a pure module */
